#version 330

uniform sampler2D atlas;
uniform int tileCount;
uniform int tileSize;
uniform float fogDistance;
uniform vec3 fogColor;

out vec3 out_color;

in vec3 ex_pos;
flat in int ex_voxel;
in vec3 ex_normal;
in vec4 view_pos;



void main() {    
    vec2 tileOffset = vec2(ex_voxel % tileCount, (ex_voxel%256) / tileCount);
    tileOffset = tileOffset / tileSize;
    
    vec2 tileUV = vec2(dot(ex_normal.zxy, ex_pos), dot(ex_normal.yzx, ex_pos));
    vec2 texCoord = tileOffset + fract(tileUV) / tileSize;
    
    vec3 texel = texture2D(atlas, texCoord).rgb;

	vec3 lightDir = vec3(0.5,-1.0,0.5	);
	float dot_prod = max(dot(-lightDir, ex_normal), 0.0);

	vec3 ambiant = vec3(0.2,0.2,0.2) * texel;
	vec3 diffuse = vec3(0.5,0.5,0.5) * texel * dot_prod;

	float minFogDist = fogDistance*0.5;
	float fogFactor = clamp((length(-view_pos)-minFogDist)/(fogDistance-minFogDist),0.0,1.0);

    out_color = mix(ambiant + diffuse, fogColor, fogFactor);

}
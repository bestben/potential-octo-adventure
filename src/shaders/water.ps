#version 330

uniform sampler2D atlas;
uniform int tileCount;
uniform int tileSize;

uniform float fogDistance;
uniform vec3 fogColor;

uniform float time;

out vec4 out_color;

in vec3 ex_pos;
flat in int ex_voxel;
in vec3 ex_normal;
in vec4 view_pos;

in float lightVar;


void main() {    
    
    vec2 tileOffset = vec2(ex_voxel % tileCount, (ex_voxel%256) / tileCount);
    tileOffset = tileOffset / tileSize;
    
    vec2 tileUV = vec2(dot(ex_normal.zxy, ex_pos), dot(ex_normal.yzx, ex_pos));
    tileUV.x = tileUV.x + sin(tileUV.y*10.+time*0.005)*0.01;
    tileUV.y = tileUV.y + sin(tileUV.x*10.+time*0.005)*0.01;
    vec2 texCoord = tileOffset + fract(tileUV) / tileSize;

    float light = clamp(lightVar/32.0, 0.0, 1.0);
    light = 1.0 - pow(1.0-light, 0.25);
    vec4 texelAll = texture2D(atlas, texCoord) * light;
    texelAll.a = 0.5;

    float minFogDist = fogDistance*0.85;
	float fogFactor = clamp((length(-view_pos)-minFogDist)/(fogDistance-minFogDist),0.0,1.0);

    out_color = mix(texelAll, vec4(fogColor * light, 1.0), fogFactor);
}